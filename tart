[1mdiff --git a/logic.js b/logic.js[m
[1mindex 67b3936..5bd7aab 100644[m
[1m--- a/logic.js[m
[1m+++ b/logic.js[m
[36m@@ -87,28 +87,20 @@[m [mexport async function runMainLogic(accessToken, testEmail = TEST_EMAIL) {[m
   console.log("📡 Calling Core API /desk/people...");[m
   const peopleRes = await coreClient.get("/desk/people", {[m
     params: {[m
[31m-      per_page: 50,[m
[32m+[m[32m      per_page: 100, // aumentar el rango[m
       is_member: true,[m
       sort: "-updated_at",[m
     },[m
   });[m
 [m
[31m-  let people = peopleRes.data.people;[m
[32m+[m[32m  let people = peopleRes.data.people || [];[m
   if (testEmail) {[m
     people = people.filter((p) => p.email === testEmail);[m
[31m-    console.log([m
[31m-      `🧪 Test mode: filtered to ${people.length} person(s) matching ${testEmail}`[m
[31m-    );[m
[32m+[m[32m    console.log(`🧪 Test mode: ${people.length} match for ${testEmail}`);[m
   }[m
[31m-[m
   console.log(`✅ Retrieved ${people.length} people`);[m
[31m-  people[m
[31m-    .slice(0, 5)[m
[31m-    .forEach((p) =>[m
[31m-      console.log(`- ${p.first_name} ${p.last_name} (${p.email})`)[m
[31m-    );[m
 [m
[31m-  console.log("📊 Fetching client report from Reporting API v3...");[m
[32m+[m[32m  console.log("📊 Fetching inactive clients from Reporting API v3...");[m
   const reportRes = await reportingClient.post("/reports/clients/queries", {[m
     data: {[m
       type: "report_queries",[m
[36m@@ -120,78 +112,48 @@[m [mexport async function runMainLogic(accessToken, testEmail = TEST_EMAIL) {[m
           "last_visit_date",[m
           "days_since_last_visit",[m
         ],[m
[31m-        filter: [["gt", "days_since_last_visit", 10]],[m
[32m+[m[32m        filter: [["gt", "days_since_last_visit", 10]], // >10 días inactivos[m
       },[m
     },[m
   });[m
 [m
[31m-  const rows = reportRes.data?.data?.attributes?.rows;[m
[31m-[m
[31m-  if (!rows) {[m
[31m-    console.error("❌ No rows returned from the report API");[m
[31m-    console.dir(reportRes.data, { depth: null });[m
[31m-    return;[m
[31m-  }[m
[31m-[m
[32m+[m[32m  const rows = reportRes.data?.data?.attributes?.rows || [];[m
   console.log(`🗂 Retrieved ${rows.length} inactive clients`);[m
 [m
[32m+[m[32m  // Filtrar si hay testEmail[m
   const filteredRows = testEmail[m
[31m-  ? rows.filter((c) => c.values?.email === testEmail)[m
[31m-  : rows;[m
[31m-[m
[31m-// Remove "Pike13 Inactive" tag from recently active users[m
[31m-for (const row of rows) {[m
[31m-  const [_, email, full_name, __, days_since_last_visit] = row;[m
[31m-[m
[31m-  if (!email || !full_name || days_since_last_visit === undefined) continue;[m
[31m-[m
[31m-  if (days_since_last_visit <= 10) {[m
[31m-    await removeInactiveTagIfActive(email, full_name);[m
[31m-  }[m
[31m-}[m
[31m-[m
[31m-// Proceed with sending inactive members to GoHighLevel[m
[31m-for (const row of filteredRows) {[m
[31m-  const [person_id, email, full_name, last_visit_date, days_since_last_visit] = row;[m
[31m-[m
[31m-  if (!email || !full_name || days_since_last_visit === undefined) {[m
[31m-    console.warn(`⚠️ Skipping incomplete client:`, row);[m
[31m-    continue;[m
[32m+[m[32m    ? rows.filter((c) => c[1] === testEmail)[m
[32m+[m[32m    : rows;[m
[32m+[m
[32m+[m[32m  // 1. Quitar "Pike13 Inactive" tag si han vuelto (<10 días)[m
[32m+[m[32m  for (const row of rows) {[m
[32m+[m[32m    const [_, email, full_name, __, days_since_last_visit] = row;[m
[32m+[m[32m    if (!email || !full_name) continue;[m
[32m+[m[32m    if (days_since_last_visit <= 10) {[m
[32m+[m[32m      await removeInactiveTagIfActive(email, full_name);[m
[32m+[m[32m    }[m
   }[m
 [m
[31m-  const hasPlan = await checkPlans(reportingClient, person_id);[m
[31m-  if (!hasPlan) {[m
[31m-    console.log(`🚫 Skipping ${email} - no valid plan`);[m
[31m-    continue;[m
[31m-  }[m
[31m-[m
[31m-  // console.log(`✅ Would send to ${email} (${full_name})`);[m
[31m-  await sendToGoHighLevel({[m
[31m-    email,[m
[31m-    full_name,[m
[31m-    days_since_last_visit,[m
[31m-  });[m
[31m-}[m
[31m-[m
[31m-for (const row of filteredRows) {[m
[31m-  const [person_id, email, full_name, last_visit_date, days_since_last_visit] = row;[m
[31m-[m
[31m-  if (!email || !full_name || days_since_last_visit === undefined) {[m
[31m-    console.warn(`⚠️ Skipping incomplete client:`, row);[m
[31m-    continue;[m
[32m+[m[32m  // 2. Enviar a GHL los que cumplen[m
[32m+[m[32m  for (const row of filteredRows) {[m
[32m+[m[32m    const [person_id, email, full_name, last_visit_date, days_since_last_visit] = row;[m
[32m+[m
[32m+[m[32m    if (!email || !full_name || days_since_last_visit === undefined) {[m
[32m+[m[32m      console.warn(`⚠️ Skipping incomplete client:`, row);[m
[32m+[m[32m      continue;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const hasPlan = await checkPlans(reportingClient, person_id);[m
[32m+[m[32m    if (!hasPlan) {[m
[32m+[m[32m      console.log(`🚫 Skipping ${email} - no valid plan`);[m
[32m+[m[32m      continue;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    console.log(`✅ Sending ${email} (${full_name}) to GoHighLevel`);[m
[32m+[m[32m    await sendToGoHighLevel({[m
[32m+[m[32m      email,[m
[32m+[m[32m      full_name,[m
[32m+[m[32m      days_since_last_visit,[m
[32m+[m[32m    });[m
   }[m
[31m-[m
[31m-const hasPlan = await checkPlans(reportingClient, person_id);[m
[31m-if (!hasPlan) {[m
[31m-  console.log(`🚫 Skipping ${email} - no valid plan`);[m
[31m-  continue;[m
[31m-}[m
[31m-[m
[31m-// console.log(`✅ Would send to ${email} (${full_name})`);[m
[31m-await sendToGoHighLevel({[m
[31m-  email,[m
[31m-  full_name,[m
[31m-  days_since_last_visit,[m
[31m-});[m
[31m-}[m
 }[m
